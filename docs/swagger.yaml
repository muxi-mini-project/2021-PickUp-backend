basePath: /pickup
definitions:
  handler.Error:
    properties:
      error_code:
        type: string
      message:
        type: string
    type: object
  model.Comment:
    properties:
      driver_id:
        type: string
      driver_score:
        type: number
      passenger_id:
        type: string
      passenger_score:
        type: number
      passenger_words:
        type: string
      words:
        type: string
    type: object
  model.LoginInfo:
    properties:
      pwd:
        type: string
      sid:
        type: string
    type: object
  model.Res:
    properties:
      msg:
        type: string
    type: object
  model.Route:
    properties:
      end_spot:
        type: string
      end_time:
        type: string
      start_spot:
        type: string
      start_time:
        type: string
      user_id:
        type: string
    type: object
  model.UpdatePwdInfo:
    properties:
      new:
        type: string
      old:
        type: string
    type: object
  model.Users:
    properties:
      gender:
        type: integer
      nick_name:
        type: string
      notes:
        type: string
      password:
        type: string
      phone:
        type: string
      picture:
        type: string
      score:
        type: integer
    type: object
  model.VRequireDriver:
    properties:
      driver_id:
        type: string
      end_time:
        type: string
      id:
        type: integer
      notes:
        type: string
      passing_spots:
        type: string
      start_spot:
        type: string
      start_time:
        type: string
      status:
        type: integer
      ymd:
        description: 年月日
        type: string
    type: object
  model.VeRequireDriver:
    properties:
      end_time:
        type: string
      notes:
        type: string
      passing_spots:
        type: string
      start_spot:
        type: string
      start_time:
        type: string
      ymd:
        description: 年月日
        type: string
    type: object
  model.VeRequireDriver1:
    properties:
      driver_id:
        type: string
      driver_phone:
        type: string
      end_time:
        type: string
      notes:
        type: string
      passing_spots:
        type: string
      start_spot:
        type: string
      start_time:
        type: string
      status:
        type: string
      ymd:
        description: 年月日
        type: string
    type: object
  model.VeRequirePassenger:
    properties:
      end_spot:
        type: string
      end_time:
        type: string
      notes:
        type: string
      start_spot:
        type: string
      start_time:
        type: string
      status:
        type: integer
      urgent:
        description: 紧急情况,1为紧急,2为非紧急,如果没有则视为非紧急
        type: integer
      ymd:
        description: 年月日
        type: string
    type: object
  model.VeRoute:
    properties:
      end_spot:
        type: string
      start_spot:
        type: string
      user_phone:
        type: string
    type: object
  model.VeUsers:
    properties:
      gender:
        type: integer
      nick_name:
        type: string
      notes:
        type: string
      phone:
        type: string
      picture:
        type: string
      score:
        type: integer
    type: object
host: 39.102.42.156
info:
  contact: {}
  description: pickup 顺风车
  title: pick up
  version: "1.0"
paths:
  /driver:
    delete:
      consumes:
      - application/json
      description: 司机删除订单
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"success"}'
          schema:
            $ref: '#/definitions/model.Res'
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: '{"error_code":"30001", "message":"database does not open successful"}
            失败'
          schema:
            $ref: '#/definitions/handler.Error'
      summary: 司机订单
      tags:
      - driver
    get:
      consumes:
      - application/json
      description: 显示订单信息,点击 订单详情页 时调用
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/model.VeRequireDriver1'
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/handler.Error'
      summary: 显示订单信息
      tags:
      - driver
    post:
      consumes:
      - application/json
      description: 司机创造新的订单
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: 司机需要填写的信息,注意年月日需要以xx年xx月xx日的形式填写,status表示该订单是否完成,1为未完成,2为已完成
        in: body
        name: tmprequirement
        required: true
        schema:
          $ref: '#/definitions/model.VeRequireDriver'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"success", "drt":"string"}'
          schema:
            $ref: '#/definitions/model.Res'
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: '{"error_code":"30001", "message":"database does not open successful"}
            失败'
          schema:
            $ref: '#/definitions/handler.Error'
      summary: 司机订单
      tags:
      - driver
  /driver/:id:
    get:
      consumes:
      - application/json
      description: 在路径中,点击 创建新订单 时调用
      parameters:
      - description: 常用路径的id
        in: path
        name: id
        required: true
        type: integer
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/model.VeRoute'
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/handler.Error'
      summary: 通过常用路径来添加部分订单信息
      tags:
      - driver
  /passenger:
    delete:
      consumes:
      - application/json
      description: 乘客删除订单
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"success"}'
          schema:
            $ref: '#/definitions/model.Res'
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: '{"error_code":"30001", "message":"database does not open successful"}
            失败'
          schema:
            $ref: '#/definitions/handler.Error'
      summary: 乘客订单
      tags:
      - driver
    get:
      consumes:
      - application/json
      description: 显示订单信息,点击 订单详情页 时调用
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/model.VeRequirePassenger'
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/handler.Error'
      summary: 显示订单信息
      tags:
      - passenger
    post:
      consumes:
      - application/json
      description: 乘客创造新的订单
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: 乘客需要填写的信息,注意年月日需要以xx年xx月xx日的形式填写,status表示该订单是否完成,1为未完成,2为已完成
        in: body
        name: tmprequirement
        required: true
        schema:
          $ref: '#/definitions/model.VeRequirePassenger'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"success", "pid":"string"}'
          schema:
            $ref: '#/definitions/model.Res'
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: '{"error_code":"30001", "message":"database does not open successful"}
            失败'
          schema:
            $ref: '#/definitions/handler.Error'
      summary: 乘客订单
      tags:
      - passenger
  /passenger/:id:
    get:
      consumes:
      - application/json
      description: 在路径中,点击 创建新订单 时调用
      parameters:
      - description: 常用路径的id
        in: path
        name: id
        required: true
        type: integer
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/model.VeRoute'
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/handler.Error'
      summary: 通过常用路径来添加部分订单信息
      tags:
      - passenger
  /passenger/confirm:
    put:
      consumes:
      - application/json
      description: 乘客对司机发出请求
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: 司机的id
        in: path
        name: driver_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"success","pid":"string","did":"string"}" 如果成功,则发送给对应司机乘客的id'
          schema:
            $ref: '#/definitions/model.Res'
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: '{"error_code":"20001", "message":"Fail."} 确认失败'
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/handler.Error'
      summary: 乘客确认
      tags:
      - passenger
  /route:
    get:
      consumes:
      - application/json
      description: 显示订单信息,点击 订单详情页 时调用
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            items:
              $ref: '#/definitions/model.Route'
            type: array
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/handler.Error'
      summary: 显示订单信息
      tags:
      - passenger
    post:
      consumes:
      - application/json
      description: 用户创造新的常用路径
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: 用户需要填写的信息
        in: body
        name: tmprequirement
        required: true
        schema:
          $ref: '#/definitions/model.Route'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"success", "pid":"string"}'
          schema:
            $ref: '#/definitions/model.Res'
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: '{"error_code":"30001", "message":"database does not open successful"}
            失败'
          schema:
            $ref: '#/definitions/handler.Error'
      summary: 常用路径
      tags:
      - route
  /route/:route_id:
    delete:
      consumes:
      - application/json
      description: 用户删除路径
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: 路径id
        in: path
        name: route_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"success"}'
          schema:
            $ref: '#/definitions/model.Res'
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: '{"error_code":"30001", "message":"database does not open successful"}
            失败'
          schema:
            $ref: '#/definitions/handler.Error'
      summary: 用户路径
      tags:
      - route
  /user/recommend:
    get:
      consumes:
      - application/json
      description: 显示司机与乘客的匹配度和司机订单信息,在乘客查看订单,进行确认的时候进行调用
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            items:
              $ref: '#/definitions/model.VRequireDriver'
            type: array
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/handler.Error'
      summary: 显示匹配度
      tags:
      - user
  /users:
    get:
      consumes:
      - application/json
      description: 显示用户信息，点击“我的”和“修改信息”的时候调用
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/model.Users'
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/handler.Error'
      summary: 显示用户信息
      tags:
      - user
    post:
      consumes:
      - application/json
      description: 注册新用户,通过一站式登录来注册,(添加信誉分score,初始注册时,每个用户都是100分)
      parameters:
      - description: 学号和密码
        in: body
        name: loginInfo
        required: true
        schema:
          $ref: '#/definitions/model.LoginInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"success", "token": string}'
          schema:
            $ref: '#/definitions/model.Res'
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: '{"error_code":"20001", "message":"Fail."} 注册失败'
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: '{"error_code":"30001", "message":"database does not open successful"}
            失败'
          schema:
            $ref: '#/definitions/handler.Error'
      summary: 注册
      tags:
      - user
    put:
      consumes:
      - application/json
      description: 修改用户信息，点击“修改信息”的时候调用
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: userinfo
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.VeUsers'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/model.Users'
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/handler.Error'
      summary: 修改用户信息
      tags:
      - user
  /users/comment:
    put:
      consumes:
      - application/json
      description: 用户给予乘客和用户评分和评论
      parameters:
      - description: 用户给予司机和乘客评分和评论,需要对应乘客和司机的id
        in: body
        name: Comment
        required: true
        schema:
          $ref: '#/definitions/model.Comment'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"success"}'
          schema:
            $ref: '#/definitions/model.Res'
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: '{"error_code":"20001", "message":"Fail."} 评论失败'
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/handler.Error'
      summary: 用户评论
      tags:
      - user
  /users/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: 学号和密码
        in: body
        name: loginInfo
        required: true
        schema:
          $ref: '#/definitions/model.LoginInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"success", "token": string}'
          schema:
            $ref: '#/definitions/model.Res'
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: '{"error_code":"20001", "message":"user does not exist"} 登录失败
            or {"error_code":"20002", "message":"password does not correct."}'
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: '{"error_code":"30001", "message":"database does not open successful"}
            失败'
          schema:
            $ref: '#/definitions/handler.Error'
      summary: 登录
      tags:
      - user
  /users/password:
    put:
      consumes:
      - application/json
      description: 修改用户密码，点击“修改密码”的时候调用
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: 新旧密码
        in: body
        name: passwords
        required: true
        schema:
          $ref: '#/definitions/model.UpdatePwdInfo'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/model.Users'
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/handler.Error'
      summary: 修改用户密码
      tags:
      - user
  /users/report/:report_id:
    put:
      consumes:
      - application/json
      description: 用户举报别人
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: 用户举报别人,需要对应被举报人员的id
        in: path
        name: report_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"success"}'
          schema:
            $ref: '#/definitions/model.Res'
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: '{"error_code":"20001", "message":"Fail."} 举报失败'
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/handler.Error'
      summary: 用户举报
      tags:
      - user
swagger: "2.0"
