basePath: /pickup
definitions:
  handler.Error:
    properties:
      error_code:
        type: string
      message:
        type: string
    type: object
  model.LoginInfo:
    properties:
      pwd:
        type: string
      sid:
        type: string
    type: object
  model.Res:
    properties:
      msg:
        type: string
    type: object
  model.Users:
    properties:
      gender:
        type: integer
      nick_name:
        type: string
      notes:
        type: string
      password:
        type: string
      phone:
        type: string
      picture:
        type: string
    type: object
  model.VeUsers:
    properties:
      gender:
        type: integer
      nick_name:
        type: string
      notes:
        type: string
      phone:
        type: string
      picture:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: pickup 顺风车
  title: pick up
  version: "1.0"
paths:
  /users:
    get:
      consumes:
      - application/json
      description: 显示用户信息，点击“我的”和“修改信息”的时候调用
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/model.Users'
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/handler.Error'
      summary: 显示用户信息
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Create
      parameters:
      - description: 学号和密码
        in: body
        name: loginInfo
        required: true
        schema:
          $ref: '#/definitions/model.LoginInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"success", "token": string}'
          schema:
            $ref: '#/definitions/model.Res'
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: '{"error_code":"20001", "message":"Fail."} 注册失败'
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: '{"error_code":"30001", "message":"database does not open successful"}
            失败'
          schema:
            $ref: '#/definitions/handler.Error'
      summary: 注册
      tags:
      - user
  /users/:
    put:
      consumes:
      - application/json
      description: 修改用户信息，点击“修改信息”的时候调用
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: userinfo
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.VeUsers'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/model.Users'
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/handler.Error'
      summary: 修改用户信息
      tags:
      - user
  /users/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: 学号和密码
        in: body
        name: loginInfo
        required: true
        schema:
          $ref: '#/definitions/model.LoginInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"success", "token": string}'
          schema:
            $ref: '#/definitions/model.Res'
        "400":
          description: '{"error_code":"00001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: '{"error_code":"20001", "message":"user does not exist"} 登录失败
            or {"error_code":"20002", "message":"password does not correct."}'
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: '{"error_code":"30001", "message":"database does not open successful"}
            失败'
          schema:
            $ref: '#/definitions/handler.Error'
      summary: 登录
      tags:
      - user
swagger: "2.0"
